params{
  reads = "/spaces/gerrit/projects/metagenomics-hackathon-2019/datasets/test/illumina/gut/100/*_{1,2}.fastq.gz"

  fastq_screen_conf = "$baseDir/fastq_screen.conf" // Threads are set to two

  kraken_db = "/spaces/gerrit/projects/metagenomics-hackathon-2019/dbs/kraken2/minikraken2_v2_8GB_201904_UPDATE/*"
  kraken_db_base = "/spaces/gerrit/projects/metagenomics-hackathon-2019/dbs/kraken2/minikraken2_v2_8GB_201904_UPDATE"

  viral_genomes = "/spaces/gerrit/projects/metagenomics-hackathon-2019/mariem/all.*"
  viral_genomes_base = "/spaces/gerrit/projects/metagenomics-hackathon-2019/mariem/all"

  search_pattern = "$baseDir/search_pattern.txt"
  
  ref_seq = "/spaces/gerrit/projects/metagenomics-hackathon-2019/mariem/GCA_000001405.15_GRCh38_no_alt_analysis_set.fna.bowtie_index.*"
  ref_seq_base = "/spaces/gerrit/projects/metagenomics-hackathon-2019/mariem/GCA_000001405.15_GRCh38_no_alt_analysis_set.fna.bowtie_index"

  out_dir = "/spaces/gerrit/projects/metagenomics-hackathon-2019/nextflow/out"
}

process {
    cache = true

    stageInMode='symlink'
    stageOutMode='rsync'

    withLabel: fastq_screen {
        container = 'docker://quay.io/biocontainers/fastq-screen:0.13.0--pl526_0'
    }
    withLabel: pairfq {
        container = 'docker://quay.io/grbot/pairfq'
    }
    withLabel: bowtie2 {
        container = 'docker://quay.io/biocontainers/bowtie2:2.2.4--py36h6bb024c_4'
    }
    withLabel: samtools {
        container = 'docker://quay.io/biocontainers/samtools:1.9--h8571acd_11'
    }
    withLabel: kraken {
        container = 'docker://quay.io/grbot/kraken2'
    }
    withLabel: krona {
        container = 'docker://quay.io/grbot/krona'
    }
    withLabel: final_report_short_reads {
        container = 'docker://quay.io/grbot/final-report-short-reads'
    }
}

profiles {
    standard {
        process.executor = 'local'
        process.cpus = 4
    }

    slurm {
        process.executor = 'slurm'
        process.queue = 'batch'
        process.time = 96.h
        process.errorStrategy = 'finish'
      	process.maxErrors = 1000
    }

    singularity {
        cacheDir = "${HOME}/.singularity"
        singularity.autoMounts = true
        singularity.enabled = true
     }
}

